#!/bin/bash

# Função para resetar todas as variáveis
reset_variables() {
    target_ip=""
    port_sequence=""
    host=""
    target_domain=""
    port_to_scan=""
}

# Função para instalar knockd, se necessário
install_knockd() {
    if ! command -v knock &> /dev/null; then
        echo "Instalando knockd..."
        sudo apt-get install -y knockd
    fi
}

# Função para realizar port knocking
do_port_knocking() {
    echo "Digite o endereço IP do host alvo:"
    read target_ip

    echo "Digite a sequência de portas a serem 'batidas' (separadas por espaço):"
    read port_sequence

    # Cores
    GREEN='\033[0;32m'
    NC='\033[0m'

    # Executa o comando knock para realizar o port knocking
    knock -v $target_ip $port_sequence

    # Verifica se o comando knock foi bem-sucedido
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}Port knocking bem-sucedido!${NC}"
    else
        echo "Port knocking falhou."
    fi
}

# Loop principal
while true; do
    reset_variables  # Resetar variáveis no início de cada iteração

    echo "Selecione uma opção:"
    echo "1. Varredura de Portas"
    echo "2. URLFinder"
    echo "3. Port Knocking"
    echo "4. Sair"

    read -p "Opção: " option

    case $option in
        1)
            echo "Para iniciar, nos informe o endereço IP sem o último octeto:"
            read host
            echo "Varredura automática ou varredura manual? [1/2]"
            read scan_option

            if [ "$scan_option" == "1" ]; then
                for ip in $(seq 1 254); do
                    hping3 -S -p 80 -c 1 "$host"."$ip" | sed 's/.*://'
                done
            else
                echo "Quantos dispositivos deseja varrer?"
                read disps
		echo "Qual porta deseja Scannear"?
                read port_to_scan
                for ip in $(seq 222 $disps); do
                    echo "Digite a porta para o IP $host.$ip:"
                    hping3 -S -p $port_to_scan -c 1 "$host"."$ip" | grep 'flag="SA"' | grep -v "100% packet loss"
                done
            fi
            ;;
        2)
            echo "Digite o domínio alvo:"
            read target_domain

            echo "===================================="
            echo "[+] Resolvendo URLS em: $target_domain"
            echo "===================================="

            wget -q "$target_domain"

            echo "===================================="
            echo "[+] Concluído: salvando os resultados em: $target_domain.ip.txt"
            cat index.html | egrep "href" | cut -d "/" -f 3 | grep "\." | cut -d '"' -f 1 | grep -v "<" | grep -v "li" >> "$target_domain.ip.txt"

            lines=$(wc -l < "$target_domain.ip.txt")
            echo "$lines totais no arquivo"

            for ((line=1; line<=$lines; line++)); do
                ip=$(sed -n "$line"p "$target_domain.ip.txt")
                domain_result=$(host $ip | grep "has address" | awk '{print $4}')
                echo "$ip -> $domain_result" >> "$target_domain.ip.txt.temp"
            done

            sort -u "$target_domain.ip.txt.temp" > "$target_domain.ip.txt.sorted"
            rm "$target_domain.ip.txt.temp"
            ;;
        3)
            install_knockd
            do_port_knocking
            ;;
        4)
            echo "Saindo do programa."
            exit 0
            ;;
        *)
            echo "Opção inválida. Tente novamente."
            ;;
    esac
done
